{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  /* TODO: detect duplicates on import */\n  import { onMount, onDestroy } from \"svelte\";\n  import { writable } from 'svelte/store'\n  import { writableGun } from './gunstores.js';\n\n  onMount(function(){\n    document.addEventListener('keydown', function(event) {\n      if (editingSong) {\n        if (event.code == 'Enter' && event.getModifierState(\"Control\")){\n          addNewVerse();\n        }\n        return;\n      };\n\n      if (event.code == 'ArrowDown') {\n        $curVerseIndex = Math.min($curVerseIndex+1, curVerses.length-1);\n      } else if (event.code == 'ArrowUp') {\n        $curVerseIndex = Math.max($curVerseIndex-1, 0);\n      } else if (event.code == 'ArrowLeft') {\n        $curSongIndex = Math.max($curSongIndex-1, 0);\n        $curVerseIndex = 0;\n      } else if (event.code == 'ArrowRight') {\n        $curSongIndex = Math.min($curSongIndex+1, playlist.length-1);\n        $curVerseIndex = 0;\n      } else if (event.code == 'Enter') {\n        $show = !$show;\n      }\n\n      if (event.code == 'ArrowDown' || event.code == 'ArrowUp'\n       || event.code == 'ArrowLeft' || event.code == 'ArrowRight'\n      ) {\n        event.preventDefault();\n        scrollToVerse($curVerseIndex);\n      }\n});\n  });\n\n  let songs = {};\n  let songsSorted = [];\n\n  let songFilter = \"\";\n  let songsFiltered = songsSorted;\n  let filterOpen = false;\n  let editing = false;\n  let editingSong;\n  let playlist = [];\n\n  GUN_SUPER_PEERS = GUN_SUPER_PEERS || ['http://127.0.0.1/gun'];\n  let gun = Gun(GUN_SUPER_PEERS);\n  let overlay = gun.get('songs').get(window.location.hash || 'demo');\n\n  /* Synced variables */\n  let show = writableGun(overlay.get('show'), false);\n  let line1 = writableGun(overlay.get('line1'), '');\n  let bodyclass = writableGun(overlay.get('bodyclass'), '');\n  let curSongIndex = writableGun(overlay.get('curSongIndex'), 0);\n  let curVerseIndex = writableGun(overlay.get('curVerseIndex'), 0);\n  let songsGun = overlay.get('songs');\n  function refreshSongsDb() {\n    songsGun.map().once(function(data, key) {\n      // console.log('songs', key, data);\n      // data && songsGun.get(key).put(null); // clear songs\n      if (data === null) delete songs[key];\n      else songs[key] = data;\n    });\n  };\n  refreshSongsDb();\n  let playlistGun = overlay.get('playlist');\n  playlistGun.once(function(data) {\n    // console.log('once playlist', data);\n    // Cleanup playlist, remove holes\n    if (data) {\n      let pl = Object.entries(data).filter(a=>(a[1] && a[0] !== '_')).sort((a, b) => a[0] - b[0]).map(a=>a[1]);\n      // console.log('once pl', pl);\n      for (let i=0; data[i] !== undefined; i++) {\n        if (data[i] != pl[i]) {\n          // console.log('putting to', i, pl[i]);\n          playlistGun.get(i).put(pl[i] || null);\n        }\n      }\n    }\n    // Subscribe to updates\n    playlistGun.map().on(function(data, key) {\n      // console.log('on playlist', key, data);\n      // data && playlistGun.get(key).put(null); // clear playlist\n      if (data === null) playlist = playlist.filter((song, i) => i != key);\n      else playlist[key] = data;\n    });\n  });\n\n  let curSong = {title:'', author:'', order:'', verses:{}};\n  let curVerses = [];\n  let newId = 's1';\n  let newVerse = '';\n\n  $: curSong = playlist[$curSongIndex] || {title:'', author:'', order:'', verses:{}};\n  $: setCurVerses(curSong);\n  $: $line1 = curVerses[$curVerseIndex] || '';\n  $: songsSorted = Object.values(songs).sort((a,b)=>(a.title.toLowerCase() > b.title.toLowerCase()));\n  $: songsFiltered = songFilter ? songsSorted.filter(matchesSong) : songsSorted;\n  \n  function setCurVerses(song) {\n    if (song) {\n      songsGun.get(Gun.node.soul(song)).get('verses')\n      .once(function(songVerses){\n        if (!songVerses) {\n          curVerses = [];\n        } else if (song.order.trim()) {\n          let verses = [];\n          song.order.split(' ').forEach(id => {\n            if (songVerses[id]) verses.push(songVerses[id]);\n          });\n          curVerses = verses;\n        } else {\n          curVerses = Object.values(songVerses).filter(v=>(v !== null && typeof v !== 'object'));\n        }\n      })\n    }\n  }\n\n  function matchesSong(song) {\n    const prefix = songFilter.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n    const titleLower = song.title.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n    return (\n      titleLower.startsWith(prefix) ||\n      (prefix.length >= 2 && titleLower.includes(' '+prefix))\n    );\n  }\n\n  function addToPlaylist(song) {\n    console.log('adding to playlist', playlist.length, song);\n    playlistGun.get(playlist.length).put(song);\n  }\n\n  function removePlaylistItem(i) {\n    if (i < $curSongIndex) $curSongIndex -= 1;\n    /* Keep playlist clean */\n    while(playlist[++i]) {\n      playlistGun.get(i-1).put(playlist[i]);\n    }\n    playlistGun.get(i-1).put(null);\n  }\n\n  function addNewSong() {\n    editingSong = {title: '', author: '', order: '', verses: {}};\n    newId = 'v1';\n    editing = true;\n  }\n\n  function removeSong(song) {\n    songsGun.get(Gun.node.soul(song)).put(null);\n    refreshSongsDb();\n  }\n\n  function toggleEdit(song) {\n    if (editing) {\n      editing = false;\n      let soul = Gun.node.soul(editingSong);\n      if (soul) {\n        songsGun.get(soul).put(editingSong);\n      } else {\n        console.log('New song', editingSong);\n        songsGun.set(editingSong);\n        refreshSongsDb();\n      }\n    } else {\n      editingSong = song;\n      songsGun.get(Gun.node.soul(song))\n        .get('verses')\n        .once(verses => {\n          editingSong.verses = verses;\n          generateNewId();\n          editing = true;\n        });\n    }\n  }\n\n  function removeVerse(id) {\n    if (!newVerse) newId = id;\n    editingSong.verses[id] = null;\n  }\n  \n  function addNewVerse() {\n    if (!editingSong.verses) editingSong.verses = {};\n    if (newId && !editingSong.verses[newId])\n      editingSong.verses[newId] = newVerse;\n    /* Clean new verse */\n    newVerse = '';\n    generateNewId();\n  }\n\n  function generateNewId() {\n    if (editingSong.verses) {\n      while (editingSong.verses[newId]) {\n        let newId2 = newId.replace(/\\d+/, (n)=>(parseInt(n)+1));\n        if (newId === newId2) newId += '1';\n        else newId = newId2;\n      }\n    }\n  }\n\n  function scrollToVerse(i) {\n    let e = document.querySelector('.verse-item:nth-child('+i+')');\n    e && e.scrollIntoView();\n  }\n\n  function toggleShow() {\n    $show = !$show;\n  }\n\n  function importSongs() {\n    let files = document.getElementById('songsUpload').files;\n    for (let i = 0; i < files.length; i++) {\n      const reader = new FileReader();\n      reader.onload = function(e) {\n        let parser = new DOMParser();\n        let dom = parser.parseFromString(e.target.result, \"application/xml\");\n        if(dom.documentElement.nodeName == \"parsererror\") {\n          console.log(dom);\n          return;\n        }\n        let title = dom.querySelector('song properties title');\n        let author = dom.querySelector('song properties author');\n        let verseOrder = dom.querySelector('song properties verseOrder');\n        let song = {\n          title: title ? title.innerHTML : '',\n          author: author ? author.innerHTML : '',\n          order: verseOrder ? verseOrder.innerHTML : '',\n          verses: {},\n        };\n        dom.querySelectorAll('song lyrics verse').forEach(function(verse){\n          song.verses[verse.getAttribute('name')] = verse.querySelector('lines').innerHTML.replace(/<br[^>]*>/g, '\\n');\n        });\n        songsGun.set(song);\n      };\n      reader.readAsText(files[i]);\n    }\n  }\n</script>\n\n<style>\n  :global(body) {\n    color: white;\n  }\n  .songs-filter {\n    display: block;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    max-height: calc(100vh - 6rem);\n    position: absolute;\n    left: -100%;\n    overflow: scroll;\n    z-index: 30;\n  }\n  .songs-filter.show {\n    left: 0;\n  }\n  .songs-filter .song-set {\n    text-align: left;\n  }\n  .songs-filter .song-add {\n    max-width: 3rem;\n  }\n  .songs-filter .song-edit {\n    max-width: 2rem;\n  }\n  .songs-filter .song-remove {\n    max-width: 2rem;\n  }\n\n  .song-item {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    text-align: left;\n    border-bottom: 1px solid #555;\n    background-color: #222;\n  }\n  .song-item:hover {\n    border-color: #9d7108;\n  }\n  .playlist {\n    display: inline-block;\n    overflow: auto;\n    vertical-align: top;\n    width: 100%;\n    margin: 1rem 0;\n  }\n  .playlist .song-set {\n    width: auto;\n    padding: 0 .75rem;\n    margin: 0;\n    text-align: left;\n  }\n  .playlist .song-remove {\n    margin: 0;\n    max-width: 2rem;\n    padding: .25rem .5rem;\n  }\n  .song-create {\n    float: right;\n  }\n\n  .verses {\n    display: inline-block;\n    overflow: auto;\n    width: 100%;\n  }\n  .verse-item {\n    border-bottom: 1px solid;\n    border-color: #3c3b3b;\n    padding: .5rem .5rem;\n    margin: 0;\n    width: 100%;\n    white-space: pre;\n  }\n  .verse-item:hover {\n    border-color: wheat;\n  }\n  .verse-item.active {\n    border-color: yellow;\n    color: white;\n    background: #375a7f;\n  }\n  .verse-item:last-child {\n    border-bottom: none;\n  }\n  p[contenteditable=\"true\"] {\n    background-color: white;\n    color: black;\n    min-height: 3rem;\n    max-width: calc(100% - 4rem);\n    padding: .5rem .5rem;\n    white-space: pre;\n  }\n  p[contenteditable=\"true\"]:focus-within {\n    background-color: lightyellow;\n  }\n  .verse-id {\n    float: right;\n    padding: .5rem;\n  }\n  .verse-new-id {\n    float: right;\n    padding: 0 0 0 .25rem;\n    width: 1.8rem;\n  }\n  .verse-new-item {\n    min-height: 3rem;\n  }\n  .verse-add {\n    float: right;\n  }\n  .verse-remove {\n    float: right;\n    padding: .5rem 0.75rem;\n  }\n\n  .bottom-buttons {\n    position: sticky;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n  }\n  .bottom-buttons button {\n    margin: 0;\n    padding: 1rem 0.25rem;\n  }\n</style>\n\n<p class=\"bodyclass\">\n  Téma:\n  <select bind:value={$bodyclass}>\n    <option value=\"\" selected>Predvolené</option>\n    <option value=\"simple-with-shadow\">Jednoduché s tieňom</option>\n  </select>\n  Import: <input id=\"songsUpload\" type=\"file\" name=\"files\" multiple on:change={importSongs}>\n</p>\n\n<div class=\"input-group\" style=\"width: 100%; display: flex;\">\n  <input class=\"form-control\" type=\"text\" placeholder=\"filter\"\n    bind:value={songFilter}\n    on:input={()=>{filterOpen = true;}}\n    on:click={()=>{filterOpen = !filterOpen;}}\n    />\n  <button type=\"button\" class=\"form-control btn btn-secondary\"\n    style=\"max-width: 2rem; padding: .25rem;\"\n    on:click={()=>{songFilter=''}}\n    >×</button>\n</div>\n\n<div class=\"songs-filter\" class:show={filterOpen}>\n  {#each songsFiltered as song}\n  <div class=\"song-item btn-group\">\n    <button class=\"song-set btn\"\n      class:btn-primary={song==curSong}\n      on:click={()=>{addToPlaylist(song); filterOpen=false}}\n    >{song.title}</button>\n    <button class=\"song-add btn btn-success\" on:click={()=>addToPlaylist(song)}>+</button>\n    <button class=\"song-edit btn btn-secondary\" on:click={()=>{toggleEdit(song); filterOpen=false}}>✎</button>\n    <button class=\"song-remove btn btn-secondary\" on:click={()=>removeSong(song)}>🗑</button>\n  </div>\n  {/each}\n</div>\n\n<div class=\"playlist\">\n  Playlist:\n  {#each playlist as song, i}\n  <div class=\"song-item btn-group\">\n    <button class=\"song-set btn\"\n      class:btn-primary={$curSongIndex==i}\n      on:click={()=>{$curSongIndex = i}}\n    >{i+1}. {song.title}</button>\n    <button class=\"song-remove btn btn-secondary\" on:click={()=>removePlaylistItem(i)}>×</button>\n  </div>\n  {/each}\n</div>\n\n<div class=\"info-bar\">\n  <button class=\"song-edit btn\" class:btn-success={editing} on:click={()=>toggleEdit(curSong)}>\n    ✎{#if editing} Uložiť{/if}\n  </button>\n  <button class=\"song-create btn\" on:click={addNewSong}>+</button>\n  {#if editing}\n    <button class=\"song-cancel btn btn-secondary\" on:click={()=>{editing=false}}>× Zrušiť</button>\n    <button class=\"song-remove btn btn-danger\" on:click={()=>{editing=false; removeSong(editingSong)}}>🗑 Odstrániť</button>\n    <input class=\"form-control\" type=\"text\" placeholder=\"title\" bind:value={editingSong.title} />\n    <input class=\"form-control\" type=\"text\" placeholder=\"author\" bind:value={editingSong.author} />\n    <input class=\"form-control\" type=\"text\" placeholder=\"order\" bind:value={editingSong.order} />\n  {:else}\n    <span>{curSong.title}</span> - <span>{curSong.author}</span>\n  {/if}\n</div>\n<div class=\"verses\">\n  {#if editing}\n    {#each Object.entries(editingSong.verses||{}).filter(e=>typeof e[1] != 'object' && e[1] != null) as [id, verse]}\n    <button class=\"verse-remove btn btn-secondary\" on:click={()=>removeVerse(id)}>×</button>\n    <span class=\"verse-id\">{id}</span>\n    <p class=\"verse-item\" contenteditable=\"true\" bind:innerHTML={editingSong.verses[id]}></p>\n    {/each}\n  {:else}\n    {#each curVerses as verse, i}\n    <p class=\"verse-item\" class:active={$curVerseIndex==i} on:click={()=>{$curVerseIndex = i}}>\n      {verse}\n    </p>\n    {/each}\n  {/if}\n  {#if editing}\n    <button class=\"verse-add btn btn-success\" on:click={addNewVerse}>+</button>\n    <input class=\"form-control verse-new-id\" type=\"text\" placeholder=\"id\" bind:value={newId} />\n    <p class=\"verse-new-item\" contenteditable=\"true\" bind:innerHTML={newVerse}></p>\n  {/if}\n</div>\n\n<div class=\"bottom-buttons btn-group\">\n  <button class=\"btn btn-primary\"\n          on:click={function(){$curSongIndex -= 1}}\n          disabled={$curSongIndex <= 0}>↑ Pieseň</button>\n  <button class=\"btn btn-primary\"\n          on:click={function(){$curSongIndex += 1}}\n          disabled={$curSongIndex >= playlist.length-1}>Pieseň ↓</button>\n\n  <button class=\"control-button btn\" on:click={toggleShow} class:btn-danger={$show} class:btn-success={!$show}>\n    {#if $show}Skryť{:else}Zobraziť{/if}\n  </button>\n\n  <button class=\"btn btn-primary\"\n          on:click={()=>{$curVerseIndex -= 1; scrollToVerse($curVerseIndex)}}\n          disabled={$curVerseIndex <= 0}>↑ Verš</button>\n  <button class=\"btn btn-primary\"\n          on:click={()=>{$curVerseIndex += 1; scrollToVerse($curVerseIndex)}}\n          disabled={$curVerseIndex >= curVerses.length-1}>Verš ↓</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}